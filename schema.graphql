type AbiEntry {
  address: String!
  name: String
  abi: JSON!
}

type Dapps @entity {
  id: ID!
  name: String!
  logo: String
  blockchain: String!
  website: String
  fromBlock: BigInt
  addedBy: String
  abis: [AbiEntry!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum DappActivityType {
  call
  event
}

type DappActivity @entity {
  id: ID!
  callId: String! #powtorzenia
  # extrinsic: SubstrateExtrinsic!
  extrinsicHash: String!
  blockNumber: Int!
  timestamp: DateTime! @index
  dappId: String!
  caller: String @index #powtorzenia
  contract: String! @index #call -> to, event -> emitujacy kontrakt
  success: Boolean @index #event -> zawsze true
  type: DappActivityType!
  name: String! @index
  value: BigInt #event --> null
  decodedArgs: JSON
}

# type SubstrateExtrinsic @entity {
#   id: ID!
#   blockNumber: Int!
#   extrinsicHash: String!
#   timestamp: DateTime! @index
#   fee: BigInt!
#   tip: BigInt
#   success: Boolean!
# }
