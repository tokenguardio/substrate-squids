type EventNorm @entity {
  id: ID!
  call: CallNorm
  blockHash: String!
  timestamp: DateTime! @index
  name: String! @index
  args: JSON
  extrinsicSuccess: Boolean
}

type CallNorm @entity {
  id: ID!
  blockHash: String!
  timestamp: DateTime! @index
  name: String! @index
  args: JSON
  success: Boolean
  origin: JSON
}

type AddressMapping @entity {
  id: ID! @index
  ss58: String! @index
}

type EvmTransaction @entity {
  id: ID!
  blockHash: String!
  timestamp: DateTime! @index
  args: JSON
  transactionType: EvmTransactionType! @index
  label: EvmLabel! @index
  from: String!
  to: String!
  fee: BigInt!
  value: BigInt
  transactionHash: String!
  status: String!
  statusReason: String!
}

enum EvmTransactionType {
  legacy
  eip1559
  eip2390
}

enum EvmLabel {
  contract_deploy
  contract_call
  native_transfer
}

type SubstrateTransaction @entity {
  id: ID!
  blockHash: String!
  timestamp: DateTime! @index
  name: String! @index
  args: JSON
  label: SubstrateLabel! @index
  fee: BigInt!
  tip: BigInt
  from: String
  to: String
  success: Boolean!
}

enum SubstrateLabel {
  contract_deploy
  contract_call
  other
}

type EvmContract @entity {
  id: ID! @index
  creator: String! @index
  transactionHash: String! @index
  createdTimestamp: DateTime! @index
}
