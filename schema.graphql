type EventNorm @entity {
  id: ID!
  blockHash: String!
  timestamp: DateTime! @index
  name: String! @index
  args: JSON
  extrinsicSuccess: Boolean
}

type CallNorm @entity {
  id: ID!
  blockHash: String!
  timestamp: DateTime! @index
  name: String! @index
  args: JSON
  success: Boolean
  origin: JSON
}

type AddressMapping @entity {
  id: ID! @index
  ss58: String
}

type Transaction @entity {
  id: ID!
  blockHash: String!
  timestamp: DateTime! @index
  hash: String!
  type: EvmTransactionType!
  label: EvmLabel! @index
  from: String! @index
  to: String @index
  fee: BigInt!
  value: BigInt!
  input: String!
  deployedAddress: String
  success: Boolean @index
  sighash: String
  transactionIndex: Int!
  traceCreates: [TraceCreate!] @derivedFrom(field: "transaction")
  traceCalls: [TraceCall!] @derivedFrom(field: "transaction")
  traceSuicides: [TraceSuicide!] @derivedFrom(field: "transaction")
  traceRewards: [TraceReward!] @derivedFrom(field: "transaction")
}

enum EvmTransactionType {
  LEGACY
  EIP1559
  EIP2930
}

enum EvmLabel {
  CONTRACT_DEPLOY
  CONTRACT_CALL
  NATIVE_TRANSFER
}

type Contract @entity {
  id: ID!
  createdBy: String @index
  transaction: Transaction
  createdTimestamp: DateTime @index
}

type TraceCreate @entity {
  id: ID!
  transaction: Transaction!
  timestamp: DateTime! @index
  subtraces: Int
  error: String
  parentHasError: Boolean
  from: String! @index
  fromType: AddressType
  value: BigInt
  gas: BigInt
  init: String
  gasUsed: BigInt
  code: String
  address: String
}

type TraceCall @entity {
  id: ID!
  transaction: Transaction!
  timestamp: DateTime! @index
  subtraces: Int
  error: String
  parentHasError: Boolean
  from: String! @index
  fromType: AddressType
  to: String! @index
  toType: AddressType
  value: BigInt
  gas: BigInt
  sighash: String
  input: String
  gasUsed: BigInt
  output: String
}

type TraceSuicide @entity {
  id: ID!
  transaction: Transaction!
  timestamp: DateTime! @index
  subtraces: Int
  error: String
  parentHasError: Boolean
  address: String
  refundAddress: String
  balance: BigInt
}

type TraceReward @entity {
  id: ID!
  transaction: Transaction!
  timestamp: DateTime! @index
  subtraces: Int
  error: String
  parentHasError: Boolean
  author: String
  value: BigInt
  rewardType: String
}

enum AddressType {
  EOA
  CONTRACT
}
