name: Deploy to ECR

on:
  push:
    branches: ["main", "reef-mainnet"]
  pull_request:
    branches: ["main", "reef-mainnet"]
  workflow_dispatch:

env:
  AWS_REGION: eu-central-1

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: processor.Dockerfile
            image-tag: latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set image name
        id: set-image-name
        run: |
          branch=$(echo "$GITHUB_REF" | sed 's#refs/heads/##')
          echo "::set-output name=image-name::squid-$branch-processor"
      - name: Check if ECR repository exists
        id: check-ecr-repository
        run: |
          repository_name=$(echo "${{ steps.set-image-name.outputs.image-name }}" | tr '[:upper:]' '[:lower:]')
          repository_url="$ECR_REGISTRY/$repository_name"
          if ! aws ecr describe-repositories --repository-names "$repository_name" &> /dev/null; then
            echo "ECR repository '$repository_name' does not exist. Creating it now..."
            aws ecr create-repository --repository-name "$repository_name"
          else
            echo "ECR repository '$repository_name' already exists"
          fi
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.set-image-name.outputs.image-name }}
          IMAGE_TAG: ${{ matrix.image-tag }}
          DOCKERFILE: ${{ matrix.dockerfile }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f $DOCKERFILE .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
