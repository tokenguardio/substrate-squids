name: Deploy to ECR

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  AWS_REGION: eu-central-1

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        squid-azero-processor:
          ECR_REPOSITORY: squid-azero-processor
          IMAGE_TAG: latest
          DOCKERFILE: processor.Dockerfile
        squid-azero-querynode:
          ECR_REPOSITORY: squid-azero-querynode
          IMAGE_TAG: latest
          DOCKERFILE: queryNode.Dockerfile

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
          DOCKERFILE: ${{ env.DOCKERFILE }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f $DOCKERFILE .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
